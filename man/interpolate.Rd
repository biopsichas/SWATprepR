% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preparing.R
\name{interpolate}
\alias{interpolate}
\title{Interpolating and writing results into model input files}
\usage{
interpolate(
  meteo_lst,
  write_path,
  catchment_boundary_path,
  dem_data_path,
  grid_spacing,
  p_vector = c("PCP", "SLR", "RELHUM", "WNDSPD", "TMP_MAX", "TMP_MIN"),
  idw_exponent = 2
)
}
\arguments{
\item{meteo_lst}{nested list of lists with dataframes.
Nested structure meteo_lst -> data -> Station ID -> Parameter -> Dataframe (DATE, PARAMETER).}

\item{write_path}{path to folder where results should be written.}

\item{catchment_boundary_path}{path to basin boundary shape file.}

\item{dem_data_path}{path to DEM raster data in same projection as weather station.}

\item{grid_spacing}{numeric value for distance in grid. Units of coordinate system should be used.}

\item{p_vector}{character vector representing weather variables to interpolate (optional, default all variables selected
c("PCP", "SLR", "RELHUM", "WNDSPD", "TMP_MAX", "TMP_MIN" ).}

\item{idw_exponent}{numeric value for exponent parameter to be used in interpolation.
(optional, default value is 2).}
}
\value{
nested list of lists with dataframes for interpolation results.
Nested structure lst -> data -> Station ID -> Parameter -> Dataframe (DATE, PARAMETER).
Function also writes all SWAT weather text input files from the interpolation results.
}
\description{
Interpolating and writing results into model input files
}
\examples{
\dontrun{
temp_path <- system.file("extdata", "weather_data.xlsx", package = "svatools")
DEM_path <- system.file("extdata", "GIS/DEM.tif", package = "svatools")
basin_path <- system.file("extdata", "GIS/basin.shp", package = "svatools")
met_lst <- load_template(temp_path, 3035)
interpolate(met_lst, "./output/",  basin_path, DEM_path, 2000) 
}
}
