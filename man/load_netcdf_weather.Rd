% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loading.R
\name{load_netcdf_weather}
\alias{load_netcdf_weather}
\title{Extract Climate Data from CORDEX NetCDF into Nested List}
\usage{
load_netcdf_weather(dir_path, location)
}
\arguments{
\item{dir_path}{Character, path to the CORDEX-BC folder (e.g., "climate/CORDEX-BC").
NetCDF data to be recognized by the function should be saved with these specific file names:
\itemize{
\item "prec.nc" for precipitation,
\item "relHum.nc" for relative humidity,
\item "solarRad.nc" for solar radiation,
\item "Tmax.nc" for maximum daily temperature,
\item "Tmin.nc" for minimum daily temperature,
\item "windSpeed.nc" for wind speed.
Ensure that the NetCDF files are correctly named and stored in the specified
directory for the function to recognize them.'
}}

\item{location}{Character or list. If character, provide the path to the catchment
boundary file (e.g., "GIS/basin.shp"). If a list, use the nested list with
dataframes. The nested structure is same as prepared by
using \code{\link{load_template}} or \code{\link{load_swat_weather}} functions.}
}
\value{
Nested list. The first nesting level is for RCP, the second for RCM model numbers,
and the rest follows the structure of meteo_lst. Nested structure: \code{meteo_lst -> 
  data -> Station ID -> Parameter -> Dataframe (DATE, PARAMETER)},
\code{meteo_lst -> stations -> Dataframe (ID, Name, Elevation, Source, geometry, 
  Long, Lat)}. This nested list structure can be used with
other package functions (e.g., \code{plot_weather(result$rcp26$"1", "PCP", "month", "sum")}).
}
\description{
This function extracts climate data from the CORDEX-BC dataset and organizes
it into a nested list. The function requires the \code{elevatr} package to be installed.
}
\examples{
\dontrun{
  # Specify the path to the catchment boundary file
  catchment_boundary_path <- system.file("extdata", "GIS/basin.shp", package = "SWATprepR") 
  
  # Specify the path to the CORDEX-BC data
  data_path <- "climate/CORDEX-BC"
  
  # Extract and organize climate data
  result <- load_netcdf_weather(data_path, catchment_boundary_path)
}
}
\keyword{loading}
